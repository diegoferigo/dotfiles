#!/bin/bash
set -euo pipefail

#
# Combination of bare repositories and sparse checkouts
#
# - https://www.atlassian.com/git/tutorials/dotfiles
# - https://github.blog/2020-01-17-bring-your-monorepo-down-to-size-with-sparse-checkout/
#

[[ -z $(type -p git) ]]   && echo "==> git command not found"   && exit 1
[[ -z $(type -p curl) ]]  && echo "==> curl command not found"  && exit 1
[[ -z $(type -p wget) ]]  && echo "==> wget command not found"  && exit 1
[[ -z $(type -p unzip) ]] && echo "==> unzip command not found" && exit 1

function config {
    git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

function backup {
    echo "==> backing up pre-existing dot files into '$1'"
    mkdir -p $1
    config checkout 2>&1 | grep "^[[:blank:]]" | awk {'print $1'} | xargs -i mv {} $1/{} || true
}

# Clone the bare repository
DOTFILES=${DOTFILES:-$HOME/.dotfiles}
GITHUB_USER=${GITHUB_USER:-diegoferigo}
git clone --quiet --bare --no-checkout https://github.com/$GITHUB_USER/dotfiles.git $DOTFILES

# Configure sparse checkout
config config --local core.sparsecheckout true
cat <<EOF >>$DOTFILES/info/sparse-checkout
/*
!.devcontainer
!.github
!bootstrap
!install_tools.sh
!README.md
!LICENSE
EOF

# Initialize dotfiles
BACKUP_DIR=${BACKUP_DIR:-$HOME/.dotfiles_backup}
(config checkout &>/dev/null || (backup ${BACKUP_DIR} && config checkout)) || (echo "==> failed" && exit 1)

# Configure bare repository
config config status.showUntrackedFiles no

# Get the folder containing this script
SCRIPT=$(readlink -f $0)
BOOTSTRAP_SCRIPT_DIR=$(dirname ${SCRIPT})

# Bootstrap tools
if [ -f "${BOOTSTRAP_SCRIPT_DIR}/install_tools.sh" ] ; then
    bash ${BOOTSTRAP_SCRIPT_DIR}/install_tools.sh
else
    curl -fsSL https://raw.githubusercontent.com/diegoferigo/dotfiles/master/install_tools.sh | bash
fi
