#!/bin/bash
set -eEuo pipefail

#
# Combination of bare repositories and sparse checkouts
#
# - https://www.atlassian.com/git/tutorials/dotfiles
# - https://github.blog/2020-01-17-bring-your-monorepo-down-to-size-with-sparse-checkout/
#

# Report errors
trap 'echo $(basename $BASH_SOURCE): Error $? at line \#${LINENO}' ERR

[[ -z $(type -p git) ]]   && echo "==> git command not found"   && exit 1
[[ -z $(type -p curl) ]]  && echo "==> curl command not found"  && exit 1
[[ -z $(type -p wget) ]]  && echo "==> wget command not found"  && exit 1
[[ -z $(type -p unzip) ]] && echo "==> unzip command not found" && exit 1

function config {
    git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

function backup {
    echo "==> Backing up pre-existing dotfiles into '$1'"

    config checkout 2>&1 | grep "^[[:blank:]]" | awk {'print $1'} | \
        xargs -i echo "dirname {}" | xargs -i bash -c "{}" | xargs -i mkdir -p $1/{}

    config checkout 2>&1 | grep "^[[:blank:]]" | awk {'print $1'} | \
        xargs -i mv --backup=numbered $HOME/{} $1/{}

    return 0
}

# Get the folder containing this script
SCRIPT=$(readlink -f $0)
BOOTSTRAP_SCRIPT_DIR=$(dirname ${SCRIPT})

DOTFILES=${DOTFILES:-$HOME/.dotfiles}
GITHUB_USER=${GITHUB_USER:-diegoferigo}

if [ -f "${BOOTSTRAP_SCRIPT_DIR}/install_tools.sh" ] ; then
    echo "==> Initializing dotfiles bare repo from ${BOOTSTRAP_SCRIPT_DIR}"
    git clone --quiet --bare --no-checkout ${BOOTSTRAP_SCRIPT_DIR} ${DOTFILES}
else
    echo "==> Cloning dotfiles bare repo"
    git clone --quiet --bare --no-checkout https://github.com/${GITHUB_USER}/dotfiles.git ${DOTFILES}
fi

echo "==> Configuring dotfiles repo"
config config status.showUntrackedFiles no
config config --local core.sparsecheckout true
cat <<EOF >>$DOTFILES/info/sparse-checkout
/*
!.devcontainer
!.github
!bootstrap
!install_tools.sh
!README.md
!LICENSE
EOF

echo "==> Initializing dotfiles"
BACKUP_DIR=${BACKUP_DIR:-$HOME/.dotfiles_backup}
(config checkout &>/dev/null || (backup ${BACKUP_DIR} && config checkout)) || (echo "==> failed" && exit 1)

echo "==> Bootstrapping tools"
if [ -f "${BOOTSTRAP_SCRIPT_DIR}/install_tools.sh" ] ; then
    bash ${BOOTSTRAP_SCRIPT_DIR}/install_tools.sh
else
    curl -fsSL https://raw.githubusercontent.com/diegoferigo/dotfiles/master/install_tools.sh | bash
fi

echo "==> Success"
